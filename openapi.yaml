openapi: 3.0.0
info:
  title: Book Management API
  version: 1.0.0
  description: RESTful API service for managing a collection of books.
paths:
  /books:
    get:
      summary: Get all books
      responses:
        '200':
          description: A list of books.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      summary: Create a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookInput'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
  /books/{id}:
    get:
      summary: Get a book by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: book ID
      responses:
        '200':
          description: The requested book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
    put:
      summary: Update a book by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Book ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: The updated book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
    delete:
      summary: Delete a book by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Book ID
      responses:
        '204':
          description: Book deleted
  /Regiser:
    post:
      summary: Register Api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '200':
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserInput'
  /Login:
    post:
      summary: Create a new task
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '201':
          description: The created task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        author:
          type: string
        isbn:
          type: string
        published_date:
          type: string
          format: date
    BookInput:
      type: object
      properties:
        title:
          type: string
        author:
          type: string
        isbn:
          type: string
        published_date:
          type: string
          format: date
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        password:
          type: string
        role:
          type: string
    Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    UserInput:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        password:
          type: string
        role:
          type: string
    Token:
      type: object
      properties:
        token:
          type: string